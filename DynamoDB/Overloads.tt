// Copyright 2015 Adamantworks.  All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="$(SolutionDir)DynamoDB.CodeGen\bin\Debug\Adamantworks.Amazon.DynamoDB.CodeGen.dll" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Adamantworks.Amazon.DynamoDB.CodeGen" #>
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Adamantworks.Amazon.DynamoDB.Converters;
using Adamantworks.Amazon.DynamoDB.DynamoDBValues;
using Adamantworks.Amazon.DynamoDB.Syntax.Delete;
using Adamantworks.Amazon.DynamoDB.Syntax.Query;

namespace Adamantworks.Amazon.DynamoDB.Contexts
{
	internal partial class QueryContext
	{
<#=		Methods.AllKeysAsync.GenMethods() #>

<#=		Methods.RangeKeyBeginsWithAsync.GenMethods() #>

<#=		Methods.RangeKeyBeginsWith.GenMethods() #>

<#=		Methods.RangeKeyEqualsAsync.GenMethods() #>

<#=		Methods.RangeKeyEquals.GenMethods() #>

<#=		Methods.RangeKeyLessThanAsync.GenMethods() #>

<#=		Methods.RangeKeyLessThan.GenMethods() #>

<#=		Methods.RangeKeyLessThanOrEqualToAsync.GenMethods() #>

<#=		Methods.RangeKeyLessThanOrEqualTo.GenMethods() #>

<#=		Methods.RangeKeyGreaterThanAsync.GenMethods() #>

<#=		Methods.RangeKeyGreaterThan.GenMethods() #>

<#=		Methods.RangeKeyGreaterThanOrEqualToAsync.GenMethods() #>

<#=		Methods.RangeKeyGreaterThanOrEqualTo.GenMethods() #>

<#=		Methods.RangeKeyBetweenAsync.GenMethods() #>

<#=		Methods.RangeKeyBetween.GenMethods() #>

<#=		Methods.AllKeysAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyBeginsWithAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyBeginsWithPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyEqualsAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyEqualsPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyLessThanAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyLessThanPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyLessThanOrEqualToAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyLessThanOrEqualToPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyGreaterThanAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyGreaterThanPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyGreaterThanOrEqualToAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyGreaterThanOrEqualToPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyBetweenAsyncPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>

<#=		Methods.RangeKeyBetweenPaged.GenExplicitImplementations("IPagedQueryRangeSyntax") #>
	}
}
